#!/usr/bin/env python

import sys,os, subprocess
from pathlib import Path

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__),"src")))

from semantic_analyzer import Analyzer
from parser import Parser
try:
	klein_file = sys.argv[1]
except:
	print("Klein Error: Invalid Input. Make sure you input either a .kln file or a directory of .kln files.")
else:
	#root = Path(__file__).resolve().parent
	#output_dir = root / "doc" / "AnnotatedGraphs"
	if os.path.isdir(klein_file):
		for f in os.listdir(klein_file):
			filename = f.split("/")[-1]
			base_filename, extension = os.path.splitext(filename)
			if extension == ".kln":
				print("\nFILENAME:",filename)
				#output_name = base_filename + "_Annotated_AST"
				content = open(os.path.join(klein_file,f)).read()
				A = Analyzer(Parser(content).parse())
				table = A.analyze()
				print("\nSYMBOL TABLE:")
				print(table)
				print()
			else:
				continue
	else:
		content = open(klein_file).read()
		#output_name = klein_file.split('/')[-1].split('.')[0] + "_Annotated_AST"
		A = Analyzer(Parser(content).parse())
		table = A.analyze()
		print("\nSYMBOL TABLE:")
		print(table)