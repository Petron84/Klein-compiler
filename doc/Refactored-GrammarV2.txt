<PROGRAM> ::= <DEFINITION-LIST>

    <DEFINITION-LIST> ::= ε
			| <DEFINITION> <DEFINITION-LIST>

         <DEFINITION> ::= "function" <IDENTIFIER> "(" <PARAMETER-LIST> ")" ":" <TYPE>
                             <BODY>

     <PARAMETER-LIST> ::= ε
			| <FORMAL-PARAMETERS>


  <FORMAL-PARAMETERS> ::= <ID-WITH-TYPE> <FORMAL-PARAMETERS'>

 <FORMAL-PARAMETERS'> ::= ε
			| "," <ID-WITH-TYPE> <FORMAL-PARAMETERS'>

       <ID-WITH-TYPE> ::= <IDENTIFIER> ":" <TYPE>

               <TYPE> ::= "integer"
                        | "boolean"

               <BODY> ::= <PRINT-EXPRESSION> <BODY>
                        | <EXPR>

   <PRINT-EXPRESSION> ::= "print" "(" <EXPR> ")"

         <EXPRESSION> ::= <SIMPLE-EXPRESSION> <EXPRESSION'>

	<EXPRESSION'> ::= ε
			| "=" <SIMPLE-EXPRESSION> <EXPRESSION'>
                        |"<" <SIMPLE-EXPRESSION> <EXPRESSION'>

  <SIMPLE-EXPRESSION> ::= <TERM> <SIMPLE-EXPRESSION'>

 <SIMPLE-EXPRESSION'> ::= ε
			| "or" <TERM> <SIMPLE-EXPRESSION'>
                        | "+" <TERM> <SIMPLE-EXPRESSION'>
                        | "-" <TERM> <SIMPLE-EXPRESSION'>

               <TERM> ::= <FACTOR> <TERM'>

	      <TERM'> ::= ε
			| "*" <FACTOR> <TERM'>
                        | "/" <FACTOR> <TERM'>
                        | "and" <FACTOR> <TERM'>

             <FACTOR> ::= <LITERAL>
                        | "not" <FACTOR>
                        | "-" <FACTOR>
                        | <IDENTIFIER> <FACTOR'>
                        | "if" <SIMPLE-EXPRESSION> <EXPRESSION'> "then" <SIMPLE-EXPRESSION> <EXPRESSION'> "else" <SIMPLE-EXPRESSION> <EXPRESSION'>
                        | "(" <SIMPLE-EXPRESSION> <EXPRESSION'> ")"

	    <FACTOR'> ::= ε
			| "(" <ARGUMENT-LIST> ")"

      <ARGUMENT-LIST> ::= ε
			| <FORMAL-ARGUMENTS>

   <FORMAL-ARGUMENTS> ::= <SIMPLE-EXPRESSION> <EXPRESSION'> <FORMAL-ARGUMENTS'>

  <FORMAL-ARGUMENTS'> ::= ε
			| "," <SIMPLE-EXPRESSION> <EXPRESSION'> <FORMAL-ARGUMENTS'>

            <LITERAL> ::= <INTEGER-LITERAL>
                        | <BOOLEAN-LITERAL>