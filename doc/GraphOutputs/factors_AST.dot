digraph AST {
node0 [label="PROGRAM"]
node1 [label="DEFINITION-LIST"]
node2 [label="DEFINITION"]
node3 [label="IDENTIFIER\nremainder"]
node4 [label="PARAMETER-LIST"]
node5 [label="ID-TYPE"]
node6 [label="IDENTIFIER\nden"]
node7 [label="TERMINAL\ninteger"]
node8 [label="ID-TYPE"]
node9 [label="IDENTIFIER\nnum"]
node10 [label="TERMINAL\ninteger"]
node11 [label="TYPE\ninteger"]
node12 [label="EXPRESSION-LIST"]
node13 [label="IF-EXPRESSION"]
node14 [label="BINARY-EXPRESSION\n<"]
node15 [label="IDENTIFIER\nnum"]
node16 [label="IDENTIFIER\nden"]
node17 [label="IDENTIFIER\nnum"]
node18 [label="FUNCTION-CALL"]
node19 [label="IDENTIFIER\nremainder"]
node20 [label="ARGUMENT-LIST"]
node21 [label="IDENTIFIER\nden"]
node22 [label="BINARY-EXPRESSION\n-"]
node23 [label="IDENTIFIER\nnum"]
node24 [label="IDENTIFIER\nden"]
node25 [label="DEFINITION"]
node26 [label="IDENTIFIER\ndivides"]
node27 [label="PARAMETER-LIST"]
node28 [label="ID-TYPE"]
node29 [label="IDENTIFIER\nb"]
node30 [label="TERMINAL\ninteger"]
node31 [label="ID-TYPE"]
node32 [label="IDENTIFIER\na"]
node33 [label="TERMINAL\ninteger"]
node34 [label="TYPE\nboolean"]
node35 [label="EXPRESSION-LIST"]
node36 [label="BINARY-EXPRESSION\n="]
node37 [label="FUNCTION-CALL"]
node38 [label="IDENTIFIER\nremainder"]
node39 [label="ARGUMENT-LIST"]
node40 [label="IDENTIFIER\na"]
node41 [label="IDENTIFIER\nb"]
node42 [label="INTEGER-LITERAL\n0"]
node43 [label="DEFINITION"]
node44 [label="IDENTIFIER\nprintAndLoop"]
node45 [label="PARAMETER-LIST"]
node46 [label="ID-TYPE"]
node47 [label="IDENTIFIER\ncurrent"]
node48 [label="TERMINAL\ninteger"]
node49 [label="ID-TYPE"]
node50 [label="IDENTIFIER\nn"]
node51 [label="TERMINAL\ninteger"]
node52 [label="TYPE\ninteger"]
node53 [label="EXPRESSION-LIST"]
node54 [label="FUNCTION-CALL"]
node55 [label="IDENTIFIER\nloopToN"]
node56 [label="ARGUMENT-LIST"]
node57 [label="BINARY-EXPRESSION\n+"]
node58 [label="IDENTIFIER\ncurrent"]
node59 [label="INTEGER-LITERAL\n1"]
node60 [label="IDENTIFIER\nn"]
node61 [label="FUNCTION-CALL"]
node62 [label="TERMINAL\nprint"]
node63 [label="IDENTIFIER\ncurrent"]
node64 [label="DEFINITION"]
node65 [label="IDENTIFIER\ntestAndLoop"]
node66 [label="PARAMETER-LIST"]
node67 [label="ID-TYPE"]
node68 [label="IDENTIFIER\ncurrent"]
node69 [label="TERMINAL\ninteger"]
node70 [label="ID-TYPE"]
node71 [label="IDENTIFIER\nn"]
node72 [label="TERMINAL\ninteger"]
node73 [label="TYPE\ninteger"]
node74 [label="EXPRESSION-LIST"]
node75 [label="IF-EXPRESSION"]
node76 [label="FUNCTION-CALL"]
node77 [label="IDENTIFIER\ndivides"]
node78 [label="ARGUMENT-LIST"]
node79 [label="IDENTIFIER\nn"]
node80 [label="IDENTIFIER\ncurrent"]
node81 [label="FUNCTION-CALL"]
node82 [label="IDENTIFIER\nprintAndLoop"]
node83 [label="ARGUMENT-LIST"]
node84 [label="IDENTIFIER\ncurrent"]
node85 [label="IDENTIFIER\nn"]
node86 [label="FUNCTION-CALL"]
node87 [label="IDENTIFIER\nloopToN"]
node88 [label="ARGUMENT-LIST"]
node89 [label="BINARY-EXPRESSION\n+"]
node90 [label="IDENTIFIER\ncurrent"]
node91 [label="INTEGER-LITERAL\n1"]
node92 [label="IDENTIFIER\nn"]
node93 [label="DEFINITION"]
node94 [label="IDENTIFIER\nloopToN"]
node95 [label="PARAMETER-LIST"]
node96 [label="ID-TYPE"]
node97 [label="IDENTIFIER\ncurrent"]
node98 [label="TERMINAL\ninteger"]
node99 [label="ID-TYPE"]
node100 [label="IDENTIFIER\nn"]
node101 [label="TERMINAL\ninteger"]
node102 [label="TYPE\ninteger"]
node103 [label="EXPRESSION-LIST"]
node104 [label="IF-EXPRESSION"]
node105 [label="BINARY-EXPRESSION\n="]
node106 [label="IDENTIFIER\nn"]
node107 [label="IDENTIFIER\ncurrent"]
node108 [label="IDENTIFIER\nn"]
node109 [label="FUNCTION-CALL"]
node110 [label="IDENTIFIER\ntestAndLoop"]
node111 [label="ARGUMENT-LIST"]
node112 [label="IDENTIFIER\ncurrent"]
node113 [label="IDENTIFIER\nn"]
node114 [label="DEFINITION"]
node115 [label="IDENTIFIER\nmain"]
node116 [label="PARAMETER-LIST"]
node117 [label="ID-TYPE"]
node118 [label="IDENTIFIER\nn"]
node119 [label="TERMINAL\ninteger"]
node120 [label="TYPE\ninteger"]
node121 [label="EXPRESSION-LIST"]
node122 [label="FUNCTION-CALL"]
node123 [label="IDENTIFIER\nloopToN"]
node124 [label="ARGUMENT-LIST"]
node125 [label="INTEGER-LITERAL\n1"]
node126 [label="IDENTIFIER\nn"]
node2 -> node3 [label="function"]
node5 -> node6 [label="id"]
node5 -> node7 [label="type"]
node4 -> node5
node8 -> node9 [label="id"]
node8 -> node10 [label="type"]
node4 -> node8
node2 -> node4
node2 -> node11
node14 -> node15 [label="left"]
node14 -> node16 [label="right"]
node13 -> node14 [label="if"]
node13 -> node17 [label="else"]
node18 -> node19 [label="function"]
node20 -> node21
node22 -> node23 [label="left"]
node22 -> node24 [label="right"]
node20 -> node22
node18 -> node20 [label="arguments"]
node13 -> node18 [label="then"]
node12 -> node13
node2 -> node12 [label="body"]
node1 -> node2
node25 -> node26 [label="function"]
node28 -> node29 [label="id"]
node28 -> node30 [label="type"]
node27 -> node28
node31 -> node32 [label="id"]
node31 -> node33 [label="type"]
node27 -> node31
node25 -> node27
node25 -> node34
node37 -> node38 [label="function"]
node39 -> node40
node39 -> node41
node37 -> node39 [label="arguments"]
node36 -> node37 [label="left"]
node36 -> node42 [label="right"]
node35 -> node36
node25 -> node35 [label="body"]
node1 -> node25
node43 -> node44 [label="function"]
node46 -> node47 [label="id"]
node46 -> node48 [label="type"]
node45 -> node46
node49 -> node50 [label="id"]
node49 -> node51 [label="type"]
node45 -> node49
node43 -> node45
node43 -> node52
node54 -> node55 [label="function"]
node57 -> node58 [label="left"]
node57 -> node59 [label="right"]
node56 -> node57
node56 -> node60
node54 -> node56 [label="arguments"]
node53 -> node54
node61 -> node62 [label="function"]
node61 -> node63 [label="arguments"]
node53 -> node61
node43 -> node53 [label="body"]
node1 -> node43
node64 -> node65 [label="function"]
node67 -> node68 [label="id"]
node67 -> node69 [label="type"]
node66 -> node67
node70 -> node71 [label="id"]
node70 -> node72 [label="type"]
node66 -> node70
node64 -> node66
node64 -> node73
node76 -> node77 [label="function"]
node78 -> node79
node78 -> node80
node76 -> node78 [label="arguments"]
node75 -> node76 [label="if"]
node81 -> node82 [label="function"]
node83 -> node84
node83 -> node85
node81 -> node83 [label="arguments"]
node75 -> node81 [label="else"]
node86 -> node87 [label="function"]
node89 -> node90 [label="left"]
node89 -> node91 [label="right"]
node88 -> node89
node88 -> node92
node86 -> node88 [label="arguments"]
node75 -> node86 [label="then"]
node74 -> node75
node64 -> node74 [label="body"]
node1 -> node64
node93 -> node94 [label="function"]
node96 -> node97 [label="id"]
node96 -> node98 [label="type"]
node95 -> node96
node99 -> node100 [label="id"]
node99 -> node101 [label="type"]
node95 -> node99
node93 -> node95
node93 -> node102
node105 -> node106 [label="left"]
node105 -> node107 [label="right"]
node104 -> node105 [label="if"]
node104 -> node108 [label="else"]
node109 -> node110 [label="function"]
node111 -> node112
node111 -> node113
node109 -> node111 [label="arguments"]
node104 -> node109 [label="then"]
node103 -> node104
node93 -> node103 [label="body"]
node1 -> node93
node114 -> node115 [label="function"]
node117 -> node118 [label="id"]
node117 -> node119 [label="type"]
node116 -> node117
node114 -> node116
node114 -> node120
node122 -> node123 [label="function"]
node124 -> node125
node124 -> node126
node122 -> node124 [label="arguments"]
node121 -> node122
node114 -> node121 [label="body"]
node1 -> node114
node0 -> node1
}