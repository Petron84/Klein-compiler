digraph AST {
node0 [label="PROGRAM"]
node1 [label="DEFINITION-LIST"]
node2 [label="DEFINITION"]
node3 [label="IDENTIFIER\nMOD"]
node4 [label="PARAMETER-LIST"]
node5 [label="ID-TYPE"]
node6 [label="IDENTIFIER\nm"]
node7 [label="TERMINAL\ninteger"]
node8 [label="ID-TYPE"]
node9 [label="IDENTIFIER\nn"]
node10 [label="TERMINAL\ninteger"]
node11 [label="TYPE\ninteger"]
node12 [label="EXPRESSION-LIST"]
node13 [label="BINARY-EXPRESSION\n-"]
node14 [label="IDENTIFIER\nm"]
node15 [label="BINARY-EXPRESSION\n*"]
node16 [label="BINARY-EXPRESSION\n/"]
node17 [label="IDENTIFIER\nm"]
node18 [label="IDENTIFIER\nn"]
node19 [label="IDENTIFIER\nn"]
node20 [label="DEFINITION"]
node21 [label="IDENTIFIER\nprint_and_continue"]
node22 [label="PARAMETER-LIST"]
node23 [label="ID-TYPE"]
node24 [label="IDENTIFIER\nm"]
node25 [label="TERMINAL\ninteger"]
node26 [label="ID-TYPE"]
node27 [label="IDENTIFIER\nn"]
node28 [label="TERMINAL\ninteger"]
node29 [label="ID-TYPE"]
node30 [label="IDENTIFIER\nunit"]
node31 [label="TERMINAL\ninteger"]
node32 [label="TYPE\ninteger"]
node33 [label="EXPRESSION-LIST"]
node34 [label="FUNCTION-CALL"]
node35 [label="IDENTIFIER\nprint"]
node36 [label="IDENTIFIER\nunit"]
node37 [label="FUNCTION-CALL"]
node38 [label="IDENTIFIER\nmain"]
node39 [label="ARGUMENT-LIST"]
node40 [label="BINARY-EXPRESSION\n-"]
node41 [label="BINARY-EXPRESSION\n*"]
node42 [label="IDENTIFIER\nunit"]
node43 [label="IDENTIFIER\nm"]
node44 [label="IDENTIFIER\nn"]
node45 [label="BINARY-EXPRESSION\n*"]
node46 [label="IDENTIFIER\nn"]
node47 [label="IDENTIFIER\nunit"]
node48 [label="DEFINITION"]
node49 [label="IDENTIFIER\nmain"]
node50 [label="PARAMETER-LIST"]
node51 [label="ID-TYPE"]
node52 [label="IDENTIFIER\nm"]
node53 [label="TERMINAL\ninteger"]
node54 [label="ID-TYPE"]
node55 [label="IDENTIFIER\nn"]
node56 [label="TERMINAL\ninteger"]
node57 [label="TYPE\ninteger"]
node58 [label="EXPRESSION-LIST"]
node59 [label="IF-EXPRESSION"]
node60 [label="BINARY-EXPRESSION\n="]
node61 [label="IDENTIFIER\nm"]
node62 [label="INTEGER-LITERAL\n1"]
node63 [label="IDENTIFIER\nn"]
node64 [label="IF-EXPRESSION"]
node65 [label="BINARY-EXPRESSION\n="]
node66 [label="FUNCTION-CALL"]
node67 [label="IDENTIFIER\nMOD"]
node68 [label="ARGUMENT-LIST"]
node69 [label="IDENTIFIER\nn"]
node70 [label="IDENTIFIER\nm"]
node71 [label="INTEGER-LITERAL\n0"]
node72 [label="BINARY-EXPRESSION\n/"]
node73 [label="IDENTIFIER\nn"]
node74 [label="IDENTIFIER\nm"]
node75 [label="FUNCTION-CALL"]
node76 [label="IDENTIFIER\nprint_and_continue"]
node77 [label="ARGUMENT-LIST"]
node78 [label="IDENTIFIER\nm"]
node79 [label="IDENTIFIER\nn"]
node80 [label="BINARY-EXPRESSION\n+"]
node81 [label="BINARY-EXPRESSION\n/"]
node82 [label="IDENTIFIER\nn"]
node83 [label="IDENTIFIER\nm"]
node84 [label="INTEGER-LITERAL\n1"]
node2 -> node3 [label="function"]
node5 -> node6 [label="id"]
node5 -> node7 [label="type"]
node4 -> node5
node8 -> node9 [label="id"]
node8 -> node10 [label="type"]
node4 -> node8
node2 -> node4
node2 -> node11
node13 -> node14 [label="left"]
node16 -> node17 [label="left"]
node16 -> node18 [label="right"]
node15 -> node16 [label="left"]
node15 -> node19 [label="right"]
node13 -> node15 [label="right"]
node12 -> node13
node2 -> node12 [label="body"]
node1 -> node2
node20 -> node21 [label="function"]
node23 -> node24 [label="id"]
node23 -> node25 [label="type"]
node22 -> node23
node26 -> node27 [label="id"]
node26 -> node28 [label="type"]
node22 -> node26
node29 -> node30 [label="id"]
node29 -> node31 [label="type"]
node22 -> node29
node20 -> node22
node20 -> node32
node34 -> node35 [label="function"]
node34 -> node36 [label="arguments"]
node33 -> node34
node37 -> node38 [label="function"]
node41 -> node42 [label="left"]
node41 -> node43 [label="right"]
node40 -> node41 [label="left"]
node40 -> node44 [label="right"]
node39 -> node40
node45 -> node46 [label="left"]
node45 -> node47 [label="right"]
node39 -> node45
node37 -> node39 [label="arguments"]
node33 -> node37
node20 -> node33 [label="body"]
node1 -> node20
node48 -> node49 [label="function"]
node51 -> node52 [label="id"]
node51 -> node53 [label="type"]
node50 -> node51
node54 -> node55 [label="id"]
node54 -> node56 [label="type"]
node50 -> node54
node48 -> node50
node48 -> node57
node60 -> node61 [label="left"]
node60 -> node62 [label="right"]
node59 -> node60 [label="if"]
node59 -> node63 [label="else"]
node66 -> node67 [label="function"]
node68 -> node69
node68 -> node70
node66 -> node68 [label="arguments"]
node65 -> node66 [label="left"]
node65 -> node71 [label="right"]
node64 -> node65 [label="if"]
node72 -> node73 [label="left"]
node72 -> node74 [label="right"]
node64 -> node72 [label="else"]
node75 -> node76 [label="function"]
node77 -> node78
node77 -> node79
node81 -> node82 [label="left"]
node81 -> node83 [label="right"]
node80 -> node81 [label="left"]
node80 -> node84 [label="right"]
node77 -> node80
node75 -> node77 [label="arguments"]
node64 -> node75 [label="then"]
node59 -> node64 [label="then"]
node58 -> node59
node48 -> node58 [label="body"]
node1 -> node48
node0 -> node1
}