digraph AST {
node0 [label="PROGRAM"]
node1 [label="DEFINITION-LIST"]
node2 [label="DEFINITION"]
node3 [label="IDENTIFIER\nmain"]
node4 [label="PARAMETER-LIST"]
node5 [label="TYPE\ninteger"]
node6 [label="EXPRESSION-LIST"]
node7 [label="FUNCTION-CALL"]
node8 [label="IDENTIFIER\nsumPrimes"]
node9 [label="ARGUMENT-LIST"]
node10 [label="INTEGER-LITERAL\n20"]
node11 [label="INTEGER-LITERAL\n2"]
node12 [label="DEFINITION"]
node13 [label="IDENTIFIER\nsumPrimes"]
node14 [label="PARAMETER-LIST"]
node15 [label="ID-TYPE"]
node16 [label="IDENTIFIER\nb"]
node17 [label="TERMINAL\ninteger"]
node18 [label="ID-TYPE"]
node19 [label="IDENTIFIER\na"]
node20 [label="TERMINAL\ninteger"]
node21 [label="TYPE\ninteger"]
node22 [label="EXPRESSION-LIST"]
node23 [label="IF-EXPRESSION"]
node24 [label="BINARY-EXPRESSION\n<"]
node25 [label="IDENTIFIER\nb"]
node26 [label="IDENTIFIER\na"]
node27 [label="INTEGER-LITERAL\n0"]
node28 [label="IF-EXPRESSION"]
node29 [label="FUNCTION-CALL"]
node30 [label="IDENTIFIER\nisPrime"]
node31 [label="ARGUMENT-LIST"]
node32 [label="IDENTIFIER\na"]
node33 [label="BINARY-EXPRESSION\n+"]
node34 [label="IDENTIFIER\na"]
node35 [label="FUNCTION-CALL"]
node36 [label="IDENTIFIER\nsumPrimes"]
node37 [label="ARGUMENT-LIST"]
node38 [label="IDENTIFIER\nb"]
node39 [label="BINARY-EXPRESSION\n+"]
node40 [label="IDENTIFIER\na"]
node41 [label="INTEGER-LITERAL\n1"]
node42 [label="FUNCTION-CALL"]
node43 [label="IDENTIFIER\nsumPrimes"]
node44 [label="ARGUMENT-LIST"]
node45 [label="IDENTIFIER\nb"]
node46 [label="BINARY-EXPRESSION\n+"]
node47 [label="IDENTIFIER\na"]
node48 [label="INTEGER-LITERAL\n1"]
node49 [label="DEFINITION"]
node50 [label="IDENTIFIER\nisPrime"]
node51 [label="PARAMETER-LIST"]
node52 [label="ID-TYPE"]
node53 [label="IDENTIFIER\nn"]
node54 [label="TERMINAL\ninteger"]
node55 [label="TYPE\nboolean"]
node56 [label="EXPRESSION-LIST"]
node57 [label="IF-EXPRESSION"]
node58 [label="BINARY-EXPRESSION\n<"]
node59 [label="IDENTIFIER\nn"]
node60 [label="INTEGER-LITERAL\n2"]
node61 [label="BOOLEAN-LITERAL\nfalse"]
node62 [label="IF-EXPRESSION"]
node63 [label="BINARY-EXPRESSION\n="]
node64 [label="IDENTIFIER\nn"]
node65 [label="INTEGER-LITERAL\n2"]
node66 [label="BOOLEAN-LITERAL\ntrue"]
node67 [label="IF-EXPRESSION"]
node68 [label="BINARY-EXPRESSION\nor"]
node69 [label="BINARY-EXPRESSION\nor"]
node70 [label="FUNCTION-CALL"]
node71 [label="IDENTIFIER\ndivisible"]
node72 [label="ARGUMENT-LIST"]
node73 [label="INTEGER-LITERAL\n2"]
node74 [label="IDENTIFIER\nn"]
node75 [label="FUNCTION-CALL"]
node76 [label="IDENTIFIER\ndivisible"]
node77 [label="ARGUMENT-LIST"]
node78 [label="INTEGER-LITERAL\n3"]
node79 [label="IDENTIFIER\nn"]
node80 [label="FUNCTION-CALL"]
node81 [label="IDENTIFIER\ndivisible"]
node82 [label="ARGUMENT-LIST"]
node83 [label="INTEGER-LITERAL\n5"]
node84 [label="IDENTIFIER\nn"]
node85 [label="BOOLEAN-LITERAL\nfalse"]
node86 [label="BOOLEAN-LITERAL\ntrue"]
node87 [label="DEFINITION"]
node88 [label="IDENTIFIER\ndivisible"]
node89 [label="PARAMETER-LIST"]
node90 [label="ID-TYPE"]
node91 [label="IDENTIFIER\ny"]
node92 [label="TERMINAL\ninteger"]
node93 [label="ID-TYPE"]
node94 [label="IDENTIFIER\nx"]
node95 [label="TERMINAL\ninteger"]
node96 [label="TYPE\nboolean"]
node97 [label="EXPRESSION-LIST"]
node98 [label="IF-EXPRESSION"]
node99 [label="BINARY-EXPRESSION\n="]
node100 [label="BINARY-EXPRESSION\n*"]
node101 [label="BINARY-EXPRESSION\n/"]
node102 [label="IDENTIFIER\nx"]
node103 [label="IDENTIFIER\ny"]
node104 [label="IDENTIFIER\ny"]
node105 [label="IDENTIFIER\nx"]
node106 [label="BOOLEAN-LITERAL\ntrue"]
node107 [label="BOOLEAN-LITERAL\nfalse"]
node2 -> node3 [label="function"]
node2 -> node4
node2 -> node5
node7 -> node8 [label="function"]
node9 -> node10
node9 -> node11
node7 -> node9 [label="arguments"]
node6 -> node7
node2 -> node6 [label="body"]
node1 -> node2
node12 -> node13 [label="function"]
node15 -> node16 [label="id"]
node15 -> node17 [label="type"]
node14 -> node15
node18 -> node19 [label="id"]
node18 -> node20 [label="type"]
node14 -> node18
node12 -> node14
node12 -> node21
node24 -> node25 [label="left"]
node24 -> node26 [label="right"]
node23 -> node24 [label="if"]
node23 -> node27 [label="else"]
node29 -> node30 [label="function"]
node31 -> node32
node29 -> node31 [label="arguments"]
node28 -> node29 [label="if"]
node33 -> node34 [label="left"]
node35 -> node36 [label="function"]
node37 -> node38
node39 -> node40 [label="left"]
node39 -> node41 [label="right"]
node37 -> node39
node35 -> node37 [label="arguments"]
node33 -> node35 [label="right"]
node28 -> node33 [label="else"]
node42 -> node43 [label="function"]
node44 -> node45
node46 -> node47 [label="left"]
node46 -> node48 [label="right"]
node44 -> node46
node42 -> node44 [label="arguments"]
node28 -> node42 [label="then"]
node23 -> node28 [label="then"]
node22 -> node23
node12 -> node22 [label="body"]
node1 -> node12
node49 -> node50 [label="function"]
node52 -> node53 [label="id"]
node52 -> node54 [label="type"]
node51 -> node52
node49 -> node51
node49 -> node55
node58 -> node59 [label="left"]
node58 -> node60 [label="right"]
node57 -> node58 [label="if"]
node57 -> node61 [label="else"]
node63 -> node64 [label="left"]
node63 -> node65 [label="right"]
node62 -> node63 [label="if"]
node62 -> node66 [label="else"]
node70 -> node71 [label="function"]
node72 -> node73
node72 -> node74
node70 -> node72 [label="arguments"]
node69 -> node70 [label="left"]
node75 -> node76 [label="function"]
node77 -> node78
node77 -> node79
node75 -> node77 [label="arguments"]
node69 -> node75 [label="right"]
node68 -> node69 [label="left"]
node80 -> node81 [label="function"]
node82 -> node83
node82 -> node84
node80 -> node82 [label="arguments"]
node68 -> node80 [label="right"]
node67 -> node68 [label="if"]
node67 -> node85 [label="else"]
node67 -> node86 [label="then"]
node62 -> node67 [label="then"]
node57 -> node62 [label="then"]
node56 -> node57
node49 -> node56 [label="body"]
node1 -> node49
node87 -> node88 [label="function"]
node90 -> node91 [label="id"]
node90 -> node92 [label="type"]
node89 -> node90
node93 -> node94 [label="id"]
node93 -> node95 [label="type"]
node89 -> node93
node87 -> node89
node87 -> node96
node101 -> node102 [label="left"]
node101 -> node103 [label="right"]
node100 -> node101 [label="left"]
node100 -> node104 [label="right"]
node99 -> node100 [label="left"]
node99 -> node105 [label="right"]
node98 -> node99 [label="if"]
node98 -> node106 [label="else"]
node98 -> node107 [label="then"]
node97 -> node98
node87 -> node97 [label="body"]
node1 -> node87
node0 -> node1
}